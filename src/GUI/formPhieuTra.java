/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

import DAO.DangNhapDAO;
import DAO.DocGiaDAO;
import DAO.PhieuMuonDAO;
import DAO.PhieuTraDAO;
import DAO.TaiLieuDAO;
import DAO.ChiTietPhieuMuonDAO;
import DAO.ChiTietPhieuTraDAO;
import POJO.ChiTietPhieuMuon;
import POJO.ChiTietPhieuTra;
import POJO.PhieuTra;
import java.awt.Color;
import java.awt.Graphics;
import java.sql.Connection;
import java.sql.Date;
import java.sql.DriverManager;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Hashtable;
import java.util.List;
import java.util.Vector;
import javax.swing.DefaultListCellRenderer;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Administrator
 */
public class formPhieuTra extends javax.swing.JInternalFrame {

    DefaultTableModel dtm = new DefaultTableModel();
    SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
    Calendar hanTra = Calendar.getInstance();
    boolean check = false;
    String maNV;
    /**
     * Creates new form QL_MuonTaiLieu
     */
    public formPhieuTra() {
        initComponents();
        maNV = DangNhapDAO.LoadMaNhanVienHienTai();
        dtm.addColumn("Mã Phiếu trả");
        dtm.addColumn("Mã Phiếu mượn");
        dtm.addColumn("Mã Đọc giả");
        dtm.addColumn("Mã Nhân viên");
        dtm.addColumn("Ngày lập");
        tblDSPhieuTra.setModel(dtm);
        LoadCombobox();
        setEnable_False();
        hienThiDanhSach();
    }
    private void LoadCombobox(){
        List<String> ds_MaPhieuMuon = PhieuMuonDAO.LoadDanhSachMaPhieuMuon();
        for (String maPhieuMuon : ds_MaPhieuMuon) {
            cboMaPhieuMuon.addItem(maPhieuMuon);
        }
        cboMaPhieuMuon.setSelectedIndex(-1);
    }
    private void hienThiDanhSach() {
        ArrayList<PhieuTra> ds = PhieuTraDAO.DanhSachPhieuTra();
        dtm.setRowCount(0);
        for(PhieuTra pt: ds) {
            Vector<Object> v = new Vector<Object>();
            v.add(pt.getMaPhieuTra());
            v.add(pt.getMaPhieuMuon());
            v.add(pt.getMaDG());
            v.add(pt.getMaNVLap());
            v.add(pt.getNgayLap());
            dtm.addRow(v);
        }
        tblDSPhieuTra.setModel(dtm);
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        txtMaPhieuTra = new javax.swing.JTextField();
        txtMaDocGia = new javax.swing.JTextField();
        txtTenDG = new javax.swing.JTextField();
        txtNgayTra = new javax.swing.JTextField();
        txtMaTL = new javax.swing.JTextField();
        txtTenTL = new javax.swing.JTextField();
        txtSLTra = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        cboMaPhieuMuon = new javax.swing.JComboBox<>();
        btnThem = new javax.swing.JButton();
        btnXoa = new javax.swing.JButton();
        btnSua = new javax.swing.JButton();
        btnMoi = new javax.swing.JButton();
        btnTKiem = new javax.swing.JButton();
        txtTimKiem = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblDSPhieuTra = new javax.swing.JTable();
        nen = new javax.swing.JLabel();

        setMaximumSize(new java.awt.Dimension(865, 555));
        setMinimumSize(new java.awt.Dimension(865, 555));
        setPreferredSize(new java.awt.Dimension(865, 555));
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel2.setBackground(new java.awt.Color(154, 221, 253));
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Thông tin chi tiết Phiếu Trả", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 14))); // NOI18N

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel2.setText("Mã phiếu trả:");
        jLabel2.setVerticalAlignment(javax.swing.SwingConstants.TOP);

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel3.setText("Mã đọc giả:");
        jLabel3.setVerticalAlignment(javax.swing.SwingConstants.TOP);

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel4.setText("Tên đọc giả:");
        jLabel4.setVerticalAlignment(javax.swing.SwingConstants.TOP);

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel5.setText("Ngày trả:");
        jLabel5.setVerticalAlignment(javax.swing.SwingConstants.TOP);

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel7.setText("Số lượng trả:");

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel8.setText("Mã tài liệu:");

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel9.setText("Tên tài liệu:");

        txtMaPhieuTra.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txtMaPhieuTra.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        txtMaPhieuTra.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtMaPhieuTraActionPerformed(evt);
            }
        });

        txtMaDocGia.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txtMaDocGia.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        txtMaDocGia.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtMaDocGiaFocusLost(evt);
            }
        });
        txtMaDocGia.addInputMethodListener(new java.awt.event.InputMethodListener() {
            public void caretPositionChanged(java.awt.event.InputMethodEvent evt) {
            }
            public void inputMethodTextChanged(java.awt.event.InputMethodEvent evt) {
                txtMaDocGiaInputMethodTextChanged(evt);
            }
        });
        txtMaDocGia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtMaDocGiaActionPerformed(evt);
            }
        });

        txtTenDG.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txtTenDG.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        txtTenDG.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTenDGActionPerformed(evt);
            }
        });

        txtNgayTra.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txtNgayTra.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        txtNgayTra.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNgayTraActionPerformed(evt);
            }
        });

        txtMaTL.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txtMaTL.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        txtMaTL.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtMaTLFocusLost(evt);
            }
        });
        txtMaTL.addInputMethodListener(new java.awt.event.InputMethodListener() {
            public void caretPositionChanged(java.awt.event.InputMethodEvent evt) {
            }
            public void inputMethodTextChanged(java.awt.event.InputMethodEvent evt) {
                txtMaTLInputMethodTextChanged(evt);
            }
        });
        txtMaTL.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtMaTLActionPerformed(evt);
            }
        });

        txtTenTL.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txtTenTL.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        txtTenTL.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTenTLActionPerformed(evt);
            }
        });

        txtSLTra.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txtSLTra.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        txtSLTra.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtSLTraFocusLost(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel6.setText("Mã phiếu mượn:");
        jLabel6.setVerticalAlignment(javax.swing.SwingConstants.TOP);

        cboMaPhieuMuon.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        cboMaPhieuMuon.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cboMaPhieuMuonItemStateChanged(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(47, 47, 47)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3))
                        .addGap(31, 31, 31))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtMaDocGia, javax.swing.GroupLayout.DEFAULT_SIZE, 170, Short.MAX_VALUE)
                    .addComponent(txtMaPhieuTra)
                    .addComponent(txtTenDG)
                    .addComponent(cboMaPhieuMuon, 0, 170, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 86, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addGap(51, 51, 51)
                        .addComponent(txtNgayTra, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel9)
                        .addGap(37, 37, 37)
                        .addComponent(txtTenTL, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                            .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(28, 28, 28)
                            .addComponent(txtMaTL, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                            .addComponent(jLabel7)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txtSLTra, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(47, 47, 47))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtMaPhieuTra, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8)
                    .addComponent(txtMaTL, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtTenTL)
                        .addComponent(jLabel9))
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(cboMaPhieuMuon)
                        .addComponent(jLabel6)))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtMaDocGia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel3))
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtSLTra, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel7)))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtNgayTra, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel5))
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel4)
                        .addComponent(txtTenDG, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        getContentPane().add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 30, 770, 200));

        btnThem.setBackground(new java.awt.Color(154, 221, 253));
        btnThem.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btnThem.setText("Thêm");
        btnThem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemActionPerformed(evt);
            }
        });
        getContentPane().add(btnThem, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 250, 90, -1));

        btnXoa.setBackground(new java.awt.Color(154, 221, 253));
        btnXoa.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btnXoa.setText("Xóa");
        btnXoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoaActionPerformed(evt);
            }
        });
        getContentPane().add(btnXoa, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 250, 90, -1));

        btnSua.setBackground(new java.awt.Color(154, 221, 253));
        btnSua.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btnSua.setText("Sửa");
        btnSua.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSuaActionPerformed(evt);
            }
        });
        getContentPane().add(btnSua, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 250, 90, -1));

        btnMoi.setBackground(new java.awt.Color(154, 221, 253));
        btnMoi.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btnMoi.setText("Mới");
        btnMoi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMoiActionPerformed(evt);
            }
        });
        getContentPane().add(btnMoi, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 250, 90, -1));

        btnTKiem.setBackground(new java.awt.Color(154, 221, 253));
        btnTKiem.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btnTKiem.setText("Tìm kiếm");
        btnTKiem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTKiemActionPerformed(evt);
            }
        });
        getContentPane().add(btnTKiem, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 310, 170, -1));

        txtTimKiem.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        txtTimKiem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTimKiemActionPerformed(evt);
            }
        });
        getContentPane().add(txtTimKiem, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 310, 410, -1));

        tblDSPhieuTra.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        tblDSPhieuTra.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title1", "Title2", "Title3", "Title4"
            }
        ));
        tblDSPhieuTra.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        tblDSPhieuTra.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblDSPhieuTraMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblDSPhieuTra);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 350, 770, 190));

        nen.setBackground(java.awt.Color.pink);
        nen.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/hinhnen3.png"))); // NOI18N
        nen.setMaximumSize(new java.awt.Dimension(735, 555));
        nen.setMinimumSize(new java.awt.Dimension(735, 555));
        getContentPane().add(nen, new org.netbeans.lib.awtextra.AbsoluteConstraints(-20, -30, 880, 580));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtMaPhieuTraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtMaPhieuTraActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtMaPhieuTraActionPerformed

    private void txtMaDocGiaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtMaDocGiaActionPerformed

    }//GEN-LAST:event_txtMaDocGiaActionPerformed

    private void txtTenDGActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTenDGActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTenDGActionPerformed

    private void txtNgayTraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNgayTraActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNgayTraActionPerformed

    private void txtMaTLActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtMaTLActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtMaTLActionPerformed

    private void txtTenTLActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTenTLActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTenTLActionPerformed

    private void btnThemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemActionPerformed
        if(txtMaPhieuTra.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Vui lòng nhập Mã Phiếu Trả");
            txtMaPhieuTra.requestFocus();
            return;
        }
         boolean checkmapt = ChiTietPhieuTraDAO.checkMaPT(txtMaPhieuTra.getText());
        if(!checkmapt) {
            JOptionPane.showMessageDialog(this, "Đã tồn tại phiếu trả: " + txtMaPhieuTra.getText() +" !!!");
            return;
        }
        if(txtSLTra.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Vui lòng nhập Số lượng trả ");
            txtSLTra.requestFocus();
            return;
        }
        
        ChiTietPhieuTra ctpt = new ChiTietPhieuTra();
        ctpt.setMaPhieuTra(txtMaPhieuTra.getText());
        ctpt.setMaPhieuMuon(String.valueOf(cboMaPhieuMuon.getSelectedItem()));
        ctpt.setMaDocGia(txtMaDocGia.getText());
        ctpt.setTenDocGia(txtTenDG.getText());
        ctpt.setMaTaiLieu(txtMaTL.getText());
        ctpt.setTenTaiLieu(txtTenTL.getText());
        ctpt.setSoLuongTra(Integer.valueOf(txtSLTra.getText()));
        Date NgayTra = Date.valueOf(txtNgayTra.getText());
        ctpt.setNgayTra(NgayTra);
        
        boolean kq = PhieuTraDAO.themPhieuTra(ctpt, maNV);
        if (kq == true) {
              JOptionPane.showMessageDialog(this, "Thêm Phiếu trả Thành công !!");
            setEnable_False();
            hienThiDanhSach();
        }
        else JOptionPane.showMessageDialog(this, "Thêm Phiếu trả Thất Bại");
    }//GEN-LAST:event_btnThemActionPerformed

    private void btnXoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaActionPerformed
        if (txtMaPhieuTra.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Vui lòng chọn Phiếu trả !!!");
            return;
        }
        boolean checkmapt = ChiTietPhieuTraDAO.checkMaPT(txtMaPhieuTra.getText());
        if(checkmapt) {
            JOptionPane.showMessageDialog(this, "Chưa tồn tại phiếu trả: " + txtMaPhieuTra.getText() +" !!!");
            return;
        }
        int delete = JOptionPane.showConfirmDialog(null, "Chắc chắn muốn Xóa Phiếu trả có mã: "+txtMaPhieuTra.getText()+" ?", "Thông báo",JOptionPane.YES_NO_CANCEL_OPTION);
        if (delete == 0) {
            boolean kq = PhieuTraDAO.xoaPhieuTra(txtMaPhieuTra.getText());
            if (kq == true) {
                JOptionPane.showMessageDialog(this, "Xóa Phiếu trả Thành công !!");
                setEnable_False();
                hienThiDanhSach();
            }
            else JOptionPane.showMessageDialog(this, "Xóa Phiếu trả Thất Bại");
        }
    }//GEN-LAST:event_btnXoaActionPerformed

    private void btnSuaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSuaActionPerformed
        if (txtMaPhieuTra.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Vui lòng chọn Phiếu trả !!!");
            return;
        }
         boolean checkmapt = ChiTietPhieuTraDAO.checkMaPT(txtMaPhieuTra.getText());
        if(checkmapt) {
            JOptionPane.showMessageDialog(this, "Chưa tồn tại phiếu trả: " + txtMaPhieuTra.getText() +" !!!");
            return;
        }
        if (check) {
            ChiTietPhieuTra ctpt = new ChiTietPhieuTra();
            ctpt.setMaPhieuTra(txtMaPhieuTra.getText());
            ctpt.setMaPhieuMuon(String.valueOf(cboMaPhieuMuon.getSelectedItem()));
            ctpt.setMaDocGia(txtMaDocGia.getText());
            ctpt.setTenDocGia(txtTenDG.getText());
            ctpt.setMaTaiLieu(txtMaTL.getText());
            ctpt.setTenTaiLieu(txtTenTL.getText());
            try {
                ctpt.setSoLuongTra(Integer.valueOf(txtSLTra.getText()));
            } catch (NumberFormatException e) {
                txtSLTra.requestFocus();
                return;
            }
            Date NgayTra = Date.valueOf(txtNgayTra.getText());
            ctpt.setNgayTra(NgayTra);
            
            boolean kq = PhieuTraDAO.suaPhieuTra(ctpt, maNV);
            if (kq == true) {
                JOptionPane.showMessageDialog(this, "Cập nhật Phiếu trả thành công");
                setEnable_False();
                hienThiDanhSach();
            }
            else JOptionPane.showMessageDialog(this, "Cập nhật Phiếu trả Thất Bại");
            btnSua.setText("Sửa");
            check = false;
        } else {
            int update = JOptionPane.showConfirmDialog(null, "Chỉnh sửa Phiếu trả có mã: "+txtMaPhieuTra.getText()+" ?", "Thông báo",JOptionPane.YES_NO_CANCEL_OPTION);
            if (update == 0) {
                check = true;
                setEnable_True();
                btnThem.setEnabled(false);
                btnSua.setText("Lưu");
            }
        }
        
    }//GEN-LAST:event_btnSuaActionPerformed

    private void btnMoiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMoiActionPerformed
        setEnable_True();
        txtMaPhieuTra.setText("PT");
        cboMaPhieuMuon.setSelectedIndex(-1);
        txtMaDocGia.setText("");
        txtTenDG.setText("");
        txtMaTL.setText("");
        txtTenTL.setText("");
        txtSLTra.setText("");
        Date NgayMuon = Date.valueOf(java.time.LocalDate.now());
        txtNgayTra.setText(String.valueOf(NgayMuon));
        txtMaDocGia.requestFocus();
    }//GEN-LAST:event_btnMoiActionPerformed

    private void btnTKiemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTKiemActionPerformed
        String str = txtTimKiem.getText();       
        ArrayList<PhieuTra> ds = PhieuTraDAO.DanhSachPhieuTraSearch(str);
        dtm.setRowCount(0);
        for(PhieuTra pt: ds) {
            Vector<Object> v = new Vector<Object>();
            v.add(pt.getMaPhieuTra());
            v.add(pt.getMaPhieuMuon());
            v.add(pt.getMaDG());
            v.add(pt.getMaNVLap());
            v.add(pt.getNgayLap());
            dtm.addRow(v);
        }
        tblDSPhieuTra.setModel(dtm);
     
    }//GEN-LAST:event_btnTKiemActionPerformed

    private void txtTimKiemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTimKiemActionPerformed
  
    }//GEN-LAST:event_txtTimKiemActionPerformed

    private void tblDSPhieuTraMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblDSPhieuTraMouseClicked
        int row = this.tblDSPhieuTra.getSelectedRow();
        String maPhieuTra = (String) tblDSPhieuTra.getValueAt(row, 0);
        ChiTietPhieuTra chiTietPhieuTra = ChiTietPhieuTraDAO.LoadChiTietPhieuTra(maPhieuTra);
        txtMaPhieuTra.setText(chiTietPhieuTra.getMaPhieuTra());
        cboMaPhieuMuon.setSelectedItem(String.valueOf(chiTietPhieuTra.getMaPhieuMuon()));
        txtMaDocGia.setText(chiTietPhieuTra.getMaDocGia());
        txtTenDG.setText(chiTietPhieuTra.getTenDocGia());
        txtMaTL.setText(chiTietPhieuTra.getMaTaiLieu());
        txtTenTL.setText(chiTietPhieuTra.getTenTaiLieu());
        txtSLTra.setText(String.valueOf(chiTietPhieuTra.getSoLuongTra()));
        txtNgayTra.setText(String.valueOf(chiTietPhieuTra.getNgayTra()));
    }//GEN-LAST:event_tblDSPhieuTraMouseClicked

    private void txtMaDocGiaInputMethodTextChanged(java.awt.event.InputMethodEvent evt) {//GEN-FIRST:event_txtMaDocGiaInputMethodTextChanged

    }//GEN-LAST:event_txtMaDocGiaInputMethodTextChanged

    private void txtMaTLInputMethodTextChanged(java.awt.event.InputMethodEvent evt) {//GEN-FIRST:event_txtMaTLInputMethodTextChanged

    }//GEN-LAST:event_txtMaTLInputMethodTextChanged

    private void cboMaPhieuMuonItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cboMaPhieuMuonItemStateChanged
        ChiTietPhieuMuon chiTietPhieuMuon = ChiTietPhieuMuonDAO.LoadChiTietPhieuMuon(String.valueOf(evt.getItem()));
        txtMaDocGia.setText(chiTietPhieuMuon.getMaDocGia());
        txtTenDG.setText(chiTietPhieuMuon.getTenDocGia());
        txtMaTL.setText(chiTietPhieuMuon.getMaTaiLieu());
        txtTenTL.setText(chiTietPhieuMuon.getTenTaiLieu());
    }//GEN-LAST:event_cboMaPhieuMuonItemStateChanged

    private void txtSLTraFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtSLTraFocusLost
        int slTra = -1, check = 1;
        try {
            slTra = Integer.valueOf(txtSLTra.getText());
            check = 0;
        } catch (Exception e) {
            check = 1;
            JOptionPane.showMessageDialog(this, "Vui lòng nhập kiểu số!");
        }
        if(check == 0) {
            int slMuon = ChiTietPhieuMuonDAO.LoadSoLuongMuon(String.valueOf(cboMaPhieuMuon.getSelectedItem()));
            if(slTra > slMuon) {
                txtSLTra.setText("");
                txtSLTra.requestFocus();
                JOptionPane.showMessageDialog(this, "Số Tài liệu đã mượn là: " + slMuon);
            } else {
                if(slTra == slMuon)
                    PhieuMuonDAO.capNhatTrangThaiPhieuMuon(String.valueOf(cboMaPhieuMuon.getSelectedItem()), 0);
                else{
                    PhieuMuonDAO.capNhatTrangThaiPhieuMuon(String.valueOf(cboMaPhieuMuon.getSelectedItem()), 1);
                }
            }
        }
    }//GEN-LAST:event_txtSLTraFocusLost

    private void txtMaDocGiaFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtMaDocGiaFocusLost
        // TODO add your handling code here:
        if(!txtMaDocGia.getText().isEmpty()) {
            String tenDG = DocGiaDAO.LoadTenDocGia(txtMaDocGia.getText());
            if (tenDG.equals("error")) {
                JOptionPane.showMessageDialog(this, "Không tìm thấy Đọc giả "+txtMaDocGia.getText()+" ");
                txtMaDocGia.setText("");
                txtMaDocGia.requestFocus();
                return;
            } 
            else{
                txtTenDG.setText(tenDG);
            }
        }
        
        
    }//GEN-LAST:event_txtMaDocGiaFocusLost

    private void txtMaTLFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtMaTLFocusLost
        // TODO add your handling code here:
        if(!txtMaTL.getText().isEmpty()) {
            String tenTL = TaiLieuDAO.LoadTenTaiLieu(txtMaTL.getText());
            if (tenTL.equals("error")) {
                JOptionPane.showMessageDialog(this, "Không tìm thấy Tài liệu "+ txtMaTL.getText()+"");
                txtMaTL.setText("");
                txtMaTL.requestFocus();
                return;
            } 
            else {
                txtTenTL.setText(tenTL);
            }
        }
    }//GEN-LAST:event_txtMaTLFocusLost


    
   
    
    private void setEnable_False() {
        txtMaPhieuTra.setEnabled(false);
        txtMaDocGia.setEnabled(false);
        txtTenDG.setEnabled(false);
        txtMaTL.setEnabled(false);
        txtTenTL.setEnabled(false);
        txtSLTra.setEnabled(false);
        txtNgayTra.setEnabled(false);
        cboMaPhieuMuon.setEnabled(false);        
        btnThem.setEnabled(false);
    }
    
    private void setEnable_True() {
        txtMaPhieuTra.setEnabled(true);
        cboMaPhieuMuon.setEnabled(true);  
        txtSLTra.setEnabled(true);       
        btnThem.setEnabled(true);
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnMoi;
    private javax.swing.JButton btnSua;
    private javax.swing.JButton btnTKiem;
    private javax.swing.JButton btnThem;
    private javax.swing.JButton btnXoa;
    private javax.swing.JComboBox<String> cboMaPhieuMuon;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel nen;
    private javax.swing.JTable tblDSPhieuTra;
    private javax.swing.JTextField txtMaDocGia;
    private javax.swing.JTextField txtMaPhieuTra;
    private javax.swing.JTextField txtMaTL;
    private javax.swing.JTextField txtNgayTra;
    private javax.swing.JTextField txtSLTra;
    private javax.swing.JTextField txtTenDG;
    private javax.swing.JTextField txtTenTL;
    private javax.swing.JTextField txtTimKiem;
    // End of variables declaration//GEN-END:variables
}
